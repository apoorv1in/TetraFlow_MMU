#usb-Raspberry_Pi_Pico_4550357128934278-if00
#ls -l /dev/serial/by-id/
#/dev/ttyACM0
#RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="/dev/ttyACM0 S1"

[gcode_macro _TETRA_FLOW_MMU_VARIABLES]         # change here macro configurables, enable disable functions!*************************
variable_mmu_usb_serial_port               :"/dev/ttyACM0"
variable_mmu_distance_from_switch_to_head  :796.0   #O1
variable_mmu_distance_from_switch_to_Safe_zone  :120.0     #O2
variable_mmu_filament_encoder_detection_length:2.88     #O3
variable_mmu_e_rotation_t0                    :21.60     #O4 FOR T0 
variable_mmu_e_rotation_t1                    :20.81    #O5 FOR T1 
variable_mmu_e_rotation_t2                    :21.02    #O6 FOR T2
variable_mmu_e_rotation_t3                    :20.66    #O7 FOR T3
variable_mmu_a_stall_value                   :40     #O8 [0..255]
variable_nozzle_purge_length    :79    # filament extrude amount during load sequenc, hotend purge from old filament, default is 200
variable_nozzle_purge_speed     :300    # filament extrude speed in mm/min adjust this value lower if flow is too high and extruder skips during loading, default is 300
variable_unload_distance        :70

gcode:

[gcode_shell_command send_mmu_command]
command: sh /home/pi/printer_data/config/commandOverSerial.sh
timeout: 70.
verbose: True

[gcode_button command_complete_button]
pin: ^!gpio25
release_gcode:  # filament unload procedure

press_gcode: # do not add any macro call here

[gcode_macro _MMU_INIT]
variable_mmu_init: 0
gcode:
    {% set mmu = printer['gcode_macro _TETRA_FLOW_MMU_VARIABLES'] %} 
    {% if mmu_init == 0 %}
        M118 MMU: {mmu.mmu_distance_from_switch_to_head}
        RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"O1 V{mmu.mmu_distance_from_switch_to_head}\""
        
        RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"O2 V{mmu.mmu_distance_from_switch_to_safe_zone}\""
        
        RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"O3 V{mmu.mmu_filament_encoder_detection_length}\""
        
        RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"O4 V{mmu.mmu_e_rotation_t0}\""
        
        RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"O5 V{mmu.mmu_e_rotation_t1}\""

         RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"O6 V{mmu.mmu_e_rotation_t2}\""

          RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"O7 V{mmu.mmu_e_rotation_t3}\""
        
        RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"O8 V{mmu.mmu_a_stall_value}\""           
        G4 P1000
        
        RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"G28\""
        
        SET_GCODE_VARIABLE MACRO=_MMU_INIT VARIABLE=mmu_init VALUE=1
    {% endif %}   

[gcode_macro MMU_INIT]
gcode:
        
  SET_GCODE_VARIABLE MACRO=_MMU_INIT VARIABLE=mmu_init VALUE=0
  _MMU_INIT



[gcode_macro _TOOL_CHANGE]
gcode:
    SET_GCODE_VARIABLE MACRO=filament_load_init VARIABLE=ignore VALUE=1
    {% set mmu = printer['gcode_macro _TETRA_FLOW_MMU_VARIABLES'] %}
    _MMU_INIT
    M118 MMU: T{ params.TOOL|int }"
    RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} T{ params.TOOL|int }"
    G4 P200
  #  M118 MMU: G900
   # RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} G900"
    
    # G4 P500
   # {% for i in range(200) %} #Timeout @10Sec
    #  _WAIT_FOR_MMU_READY
    #{% endfor %}
   # _PAUSE_IF_MMU_NOT_READY
    M400
    M118 MMU: Filament loading!  
    #M82           #set extruder to absolute mode
    M83          
    G92 E0
    #G4 P1500        # wait for 1.5 seconds
    FORCE_MOVE STEPPER=extruder DISTANCE=15 VELOCITY=10 ACCEL=1000  # load filament inside the gears force move needs to be enabled       
    G1 E{mmu.nozzle_purge_length-20} F1600 # extrude preconfigured purge length
    G1 E{mmu.nozzle_purge_length} F{mmu.nozzle_purge_speed} # extrude preconfigured purge length
    G1 E20 F{mmu.nozzle_purge_speed} # extrude preconfigured purge length
    M83
    #M3000 # LET EXTRUSION COOL
    G1 X300  F2400
    G1 X313  F2400
    G1 X300 F2400
    G1 X313  F2400
    G1 X300 F2400
    G1 X313  F2400
    G1 X300 F2400
    G1 X313  F2400
    G1 X300 F2400
    G1 X313  F2400
    
    MMU_HEAD_RESUME
   #SET_GCODE_VARIABLE MACRO=filament_load_init VARIABLE=ignore VALUE=0
    UPDATE_DELAYED_GCODE ID=clear_ignore_status DURATION=10   

[delayed_gcode clear_ignore_status]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_load_init VARIABLE=ignore VALUE=0
  SET_GCODE_VARIABLE MACRO=runnout_init VARIABLE=ignore VALUE=0 
  #M118 Clear Unload busy! 
    
[gcode_macro _WAIT_FOR_MMU_READY]
gcode:
  {% if printer['gcode_button command_complete_button'].state == 'PRESSED' %} #RELEASED PRESSED
    G4 P200
    M400
  {% endif %}

[gcode_macro _PAUSE_IF_MMU_NOT_READY]
gcode:
  {% if printer['gcode_button command_complete_button'].state == 'PRESSED' %} #RELEASED PRESSED
    RESPOND TYPE=command MSG="CHECK FILAMENTS"
    BASE_PAUSE    
  {% endif %}

[gcode_macro M600]
gcode:
  SET_GCODE_VARIABLE MACRO=runnout_init VARIABLE=ignore VALUE=1
  {% set mmu = printer['gcode_macro _TETRA_FLOW_MMU_VARIABLES'] %}
  MMU_HEAD_PARK
  _MMU_INIT
  #filament_unload
  _ERCF_FORM_TIP_STANDALONE
   M83
  #MMU_HOTEND_UNLOAD
  M118 MMU: M600
  RUN_SHELL_COMMAND CMD=send_mmu_command PARAMS="{mmu.mmu_usb_serial_port} \"M600\""
 # G4 P4000
  M400
  M118 MMU: {printer['gcode_button command_complete_button'].state}
 # BASE_PAUSE  
  {% for i in range(200) %} #Timeout @10Sec
     _WAIT_FOR_MMU_READY
  {% endfor %}
  #SET_GCODE_VARIABLE MACRO=runnout_init VARIABLE=ignore VALUE=0
  UPDATE_DELAYED_GCODE ID=clear_ignore_status DURATION=50  
  #BASE_RESUME

[gcode_macro MMU_HOTEND_UNLOAD]
gcode:
 {% set mmu = printer['gcode_macro _TETRA_FLOW_MMU_VARIABLES'] %}
  M83
  G92 E0 
  G0 E5 F500 # extruder 20mm of filament before extracting 
  G0 E-10 F2000 	#extract filament to cold end
   
  G4 P5000 # wait for two seconds
 G0 E-2 F1000 	#extract filament to cold end  
  G0 E2 F1000 	#extract filament to cold end  
   G0 E-2 F1000 	#extract filament to cold end  
    G0 E2 F1000 	#extract filament to cold end  
  
  G0 E-20 F2000 # extruder 20mm of filament before extracting
  G0 E7 F2000 # extruder 20mm of filament before extracting
  G0 E-15 F2000 # extruder 20mm of filament before extracting
  G0 E7 F2000 # extruder 20mm of filament before extracting
  G0 E-15 F2000 # extruder 20mm of filament before extracting
  G0 E7 F2000 # extruder 20mm of filament before extracting
      
  G0 E-{mmu.unload_distance} F1000	# continue extraction slow allow filament to be cooled enough before reaches the gears  

[gcode_macro MMU_HEAD_PARK]
gcode:
 # {% set km = printer["gcode_macro _km_globals"] %}
  #{% set travel_speed_xy = km.travel_speed_xy %}
 # {% set position = printer.gcode_move.gcode_position %}
  M400
  {% set position = printer.gcode_move.gcode_position %}
  SET_GCODE_VARIABLE MACRO=MMU_HEAD_RESUME VARIABLE=saved_x VALUE="{position.x}"
  SET_GCODE_VARIABLE MACRO=MMU_HEAD_RESUME VARIABLE=saved_y VALUE="{position.y}"
  SET_GCODE_VARIABLE MACRO=MMU_HEAD_RESUME VARIABLE=saved_z VALUE="{position.z}"
  #SET_GCODE_VARIABLE MACRO=MMU_HEAD_RESUME VARIABLE=saved_e VALUE="{E}"
  # G1 X314 Y200 F2400
   #G1 Z{position.z +3 } F600
  SAVE_GCODE_STATE NAME=my_move_up_state
  G91
  G1 Z5 F600
  G90
 # {% set X = 313 Y = 225  %}
 # {% set Y = params.Y|float - origin.y %}
 # {% set Z = params.Z|float %}
  #G0 Z{Z} F{travel_speed_z}
  G1 X314 Y200 F2400
  M400
  
 # RESTORE_GCODE_STATE NAME=my_move_up_state


[gcode_macro MMU_HEAD_RESUME]
  variable_saved_x: 0.0
  variable_saved_y: 0.0
  variable_saved_z: 0.0
  variable_saved_e: 0.0
gcode:
  G0 X{saved_x} Y{saved_y} F2400
  G0 Z{saved_z} F600
  M400
  RESTORE_GCODE_STATE NAME=my_move_up_state

[gcode_macro T0]
gcode:
   _TOOL_CHANGE TOOL=0

[gcode_macro T1]
gcode:
     _TOOL_CHANGE TOOL=1

[gcode_macro T2]
gcode:
     _TOOL_CHANGE TOOL=2

[gcode_macro T3]
gcode:
    _TOOL_CHANGE TOOL=3


# StandAlone cooling moves to extract proper filament tip
[gcode_macro _ERCF_FORM_TIP_STANDALONE]
description: Generic tip forming macro
gcode:
    {% set COOLING_TUBE_LENGTH = params.COOLING_TUBE_LENGTH|default(15) %} # Dragon ST: 15, Dragon HF: 10, Mosquito: 20
    {% set COOLING_TUBE_RETRACTION = params.COOLING_TUBE_RETRACTION|default(35) %} # Dragon ST: 35, Dragon HF: 30, Mosquito: 38
    {% set INITIAL_COOLING_SPEED = params.INITIAL_COOLING_SPEED|default(10) %}
    {% set FINAL_COOLING_SPEED = params.FINAL_COOLING_SPEED|default(50) %}
    {% set COOLING_MOVES = params.COOLING_MOVES|default(10) %}
    {% set TOOLCHANGE_TEMP = params.TOOLCHANGE_TEMP|default(0) %}
    {% set USE_SKINNYDIP = params.USE_SKINNYDIP|default(1) %}
    {% set USE_FAST_SKINNYDIP = params.USE_FAST_SKINNYDIP|default(0) %}
    {% set SKINNYDIP_DISTANCE = params.SKINNYDIP_DISTANCE|default(28) %} #26
    {% set DIP_INSERTION_SPEED = params.DIP_INSERTION_SPEED|default(33) %}
    {% set DIP_EXTRACTION_SPEED = params.DIP_EXTRACTION_SPEED|default(70) %}
    {% set MELT_ZONE_PAUSE = params.MELT_ZONE_PAUSE|default(0) %}
    {% set COOLING_ZONE_PAUSE = params.COOLING_ZONE_PAUSE|default(0) %}
    {% set UNLOADING_SPEED_START = params.UNLOADING_SPEED_START|default(199) %}
    {% set UNLOADING_SPEED = params.UNLOADING_SPEED|default(20) %}
    {% set RAMMING_VOLUME = params.RAMMING_VOLUME|default(0) %} # in mm3 0
    {% set INITIAL_RETRACT = params.INITIAL_RETRACT|default(0) %} # Use an initial retract or not. Don't use it if you want to ram the filament
    {% set FINAL_EJECT = params.FINAL_EJECT|default(1) %} # Fully eject the filament afterwards, default is YES

    G91
    G92 E0

    SET_PRESSURE_ADVANCE ADVANCE=0
    {% set OLD_TEMP = printer.extruder.target %}

    # Ramming with SuperSlicer standard setting
    {% if INITIAL_RETRACT|int == 1 %}
        G1 E-8.5000 F500
    {% endif %}

    {% set RATIO = (RAMMING_VOLUME|float) /23.0 %}

    G1 E{0.5784 * RATIO|float} F299 #7
    G1 E{0.5834 * RATIO|float} F302 #3
    G1 E{0.5918 * RATIO|float} F306 #6
    G1 E{0.6169 * RATIO|float} F319 #6
    G1 E{0.3393 * RATIO|float} F350 #0
    G1 E{0.3363 * RATIO|float} F350 #0
    G1 E{0.7577 * RATIO|float} F392 #6
    G1 E{0.8382 * RATIO|float} F434 #3
    G1 E{0.7776 * RATIO|float} F469 #9
    G1 E{0.1293 * RATIO|float} F469 #9
    G1 E{0.9673 * RATIO|float} F501 #2
    G1 E{1.0176 * RATIO|float} F527 #2
    G1 E{0.5956 * RATIO|float} F544 #6
    G1 E{0.4555 * RATIO|float} F544 #6
    G1 E{1.0662 * RATIO|float} F552 #4

    # set toolchange temperature just prior to filament being extracted from melt zone and wait for set point
    # (SKINNYDIP--normal mode only)
    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 0 %}
       M109 S{TOOLCHANGE_TEMP}
    {% endif %}

    # Retraction
    {% set TOTAL_RETRACTION_DISTANCE = COOLING_TUBE_RETRACTION|float + COOLING_TUBE_LENGTH|float / 2 - 15 %}
    G1 E-15 F{1.0 * UNLOADING_SPEED_START|float * 60}
    G1 E-{0.7 * TOTAL_RETRACTION_DISTANCE} F{1.0 * UNLOADING_SPEED|float * 60}
    G1 E-{0.2 * TOTAL_RETRACTION_DISTANCE} F{0.5 * UNLOADING_SPEED|float * 60}
    G1 E-{0.1 * TOTAL_RETRACTION_DISTANCE} F{0.3 * UNLOADING_SPEED|float * 60}

    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 1 %}
       M104 S{TOOLCHANGE_TEMP}
    {% endif %}

    # Generate Cooling Moves
    {% set SPEED_INC = (FINAL_COOLING_SPEED|float - INITIAL_COOLING_SPEED|float) / (2 * COOLING_MOVES|float - 1) %}
    {% for move in range(COOLING_MOVES|int) %}
      G1 E{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*move*2) * 60}
      G1 E-{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*(move*2+1)) * 60}
    {% endfor %}

    # wait for extruder to reach toolchange temperature after cooling moves complete (SKINNYDIP--fast mode only)
    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 1 %}
        M109 S{TOOLCHANGE_TEMP}
    {% endif %}

    # Generate a skinnydip move
    {% if USE_SKINNYDIP|int == 1 %}
      G1 E{SKINNYDIP_DISTANCE} F{DIP_INSERTION_SPEED|float * 60}
      G4 P{MELT_ZONE_PAUSE}
      G1 E-{SKINNYDIP_DISTANCE} F{DIP_EXTRACTION_SPEED|float * 60}
      G4 P{COOLING_ZONE_PAUSE}
    {% endif %}

    {% if TOOLCHANGE_TEMP|float > 0 %}
      M104 S{OLD_TEMP}
    {% endif %}

    {% if FINAL_EJECT|int == 1 %}
        G92 E0
        G1 E-60 F600
    {% endif %}

    G92 E0

    G90
